// Generated by data binding compiler. Do not edit!
package com.dubizzle.products.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dubizzle.domain.entity.response.products.ProductsEntity;
import com.dubizzle.products.R;
import com.dubizzle.products.listeners.ProductClickListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemLayoutProductBinding extends ViewDataBinding {
  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final TextView tvDesc;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPrice;

  @Bindable
  protected ProductsEntity.Product mItemViewModel;

  @Bindable
  protected ProductClickListener mListener;

  protected ItemLayoutProductBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView ivLogo, TextView tvDesc, TextView tvName, TextView tvPrice) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivLogo = ivLogo;
    this.tvDesc = tvDesc;
    this.tvName = tvName;
    this.tvPrice = tvPrice;
  }

  public abstract void setItemViewModel(@Nullable ProductsEntity.Product itemViewModel);

  @Nullable
  public ProductsEntity.Product getItemViewModel() {
    return mItemViewModel;
  }

  public abstract void setListener(@Nullable ProductClickListener listener);

  @Nullable
  public ProductClickListener getListener() {
    return mListener;
  }

  @NonNull
  public static ItemLayoutProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_layout_product, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemLayoutProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemLayoutProductBinding>inflateInternal(inflater, R.layout.item_layout_product, root, attachToRoot, component);
  }

  @NonNull
  public static ItemLayoutProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_layout_product, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemLayoutProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemLayoutProductBinding>inflateInternal(inflater, R.layout.item_layout_product, null, false, component);
  }

  public static ItemLayoutProductBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemLayoutProductBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemLayoutProductBinding)bind(component, view, R.layout.item_layout_product);
  }
}
